services:
  mongo1:
    image: mongo:6.0
    container_name: mongo1
    hostname: mongo1
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - "27017:27017"
    volumes:
      - mongo1_data:/data/db
      - ./config/mongo_init.js:/docker-entrypoint-initdb.d/mongo_init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=supersecretpassword
    networks:
      - mongo_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mongo2:
    image: mongo:6.0
    container_name: mongo2
    hostname: mongo2
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - "27018:27017"
    volumes:
      - mongo2_data:/data/db
    networks:
      - mongo_network
    depends_on:
      mongo1:
        condition: service_healthy

  mongo3:
    image: mongo:6.0
    container_name: mongo3
    hostname: mongo3
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - "27019:27017"
    volumes:
      - mongo3_data:/data/db
    networks:
      - mongo_network
    depends_on:
      mongo1:
        condition: service_healthy

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:

networks:
  mongo_network:
    driver: bridge